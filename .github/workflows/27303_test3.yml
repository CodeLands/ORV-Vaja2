name: Test Application

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main

jobs:
  check-tests:
    # Run this job on the latest version of Ubuntu
    runs-on: ubuntu-latest

    # Set output for matrix use in the next job
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checks-out your repository under $GITHUB_WORKSPACE

      - name: Check test scripts exist
        id: check
        run: |
          if [ ! -f .tests/test.py ]; then  # Check if test script exists
            echo "Test script not found." >&2
            exit 1  # Exit with failure if test script doesn't exist
          fi
        continue-on-error: true  # Continue to next step even if this step fails

      - name: Set output (for matrix use in next job)
        id: set-matrix
        run: echo "::set-output name=matrix::{\"include\":[{\"python-version\":\"3.8\"},{\"python-version\":\"3.9\"}]}"

      - name: Upload error log on failure
        if: failure()  # Only run this step if the previous step failed
        uses: actions/upload-artifact@v2
        with:
            name: error-log
            path: napaka.txt
            run: echo "Test script not found." > napaka.txt  # Create an error log

  run-tests:
    # Only run this job if the matrix output is not empty
    if: needs.check-tests.outputs.matrix != ''
    needs: check-tests  # This job needs to wait for check-tests to complete
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.check-tests.outputs.matrix)}}  # Use matrix strategy for multiple versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}  # Set Python version from matrix

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy opencv-python  # Install necessary Python packages

      - name: Run tests
        run: python -m unittest discover -s .tests  # Run unit tests

      - name: Download error log if exists
        uses: actions/download-artifact@v2
        with:
          name: error-log
